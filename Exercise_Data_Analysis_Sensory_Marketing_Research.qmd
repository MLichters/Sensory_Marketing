---
title-block-banner: true
title: "Sensory Marketing and Product Innovation"
subtitle: "Exercise 6 - Practicing Data Analysis in Sensory Marketing Research"
author: 
  - name: 
      given: Marcel
      family: Lichters
      non-dropping-particle: Prof. Dr.
    url: https://www.marketing.ovgu.de/
    email: marcel.lichters@ovgu.de
    corresponding: true
    affiliation: 
    - name: Otto-von-Guericke-University Magdeburg
      city: Magdeburg
      state: Saxony-Anhalt
      country: Germany
    affiliation-url: https://www.ovgu.de/en/
    orcid: 0000-0002-3710-2292
date: now
date-format: full
csl: apa-old-doi-prefix.csl
citation:
  language: "en"
  type: post
  url: https://www.ovgu.de/lichters/smpi/Exercise/Practicing_Data_Analysis/Exercise_Data_Analysis_Sensory_Marketing_Research.html
  title: 'Sensory Marketing & Product Innovation: Exercise 6 - Practicing Data Analysis in Sensory Marketing Research'
appendix-cite-as: display
format:
  html:
    theme: cosmo
    toc: true
    toc-location: left
    code-fold: false
    code-link: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-tools: false
    code-copy: hover
    number-sections: true
    number-depth: 3
    citations-hover: true
    footnotes-hover: true
email-obfuscation: javascript
editor: source
bibliography: references.bib
editor_options: 
  chunk_output_type: console
google-scholar: true
copyright: 
  holder: Prof. Dr. Marcel Lichters
  year: 2023
---

------------------------------------------------------------------------

<a title="Follow me on ResearchGate" href="https://www.researchgate.net/profile/Marcel_Lichters?cp=shp"><img src="https://www.researchgate.net/images/public/profile_share_badge.png" alt="Follow me on ResearchGate"/></a>

[Connect with me on Open Science Framework](https://osf.io/u7hyz/) \| [Contact me via LinkedIn](https://www.linkedin.com/in/lichters/)

It might be necessary to right-click -\> open in a new browser window, depending on your machine*.*

------------------------------------------------------------------------

R analysis script presenting the solutions for exercise 6 in Sensory Marketing and Product Innovation

The purpose of this script does not lie solely in answering the exercise question. Moreover, studying these scripts should help students become familiar with some aspects of working in *R*.

::: callout-tip
## If this grabs your attention

If this exercise grabs your attention, please check out our master study programs at the Otto-von-Guericke-University in Magdeburg (Germany) by clicking on the logo!
:::

<a title="Faculty of Economics and Management at Otto-von-Guericke-University Magdeburg" href="https://www.ovgu.de/unimagdeburg/en/Master-p-48820.html"><img src="Signet_WW_3.jpg" alt="Faculty of Economics and Management at Otto-von-Guericke-University Magdeburg" width="600"/></a>

# Loading packages

::: callout-important
## Beware!

*R* is a context-sensitive language. Thus, 'data' will not be interpreted in the same way as 'Data' will.
:::

In *R,* most functionality is provided by additional packages.\
Most of the packages are well-documented; see: <https://cran.r-project.org/>

1.  The code chunk below first evaluates if the package [pacman](https://cran.r-project.org/web/packages/pacman/index.html) [@pacman] is already installed on your machine. If yes, the corresponding package will be loaded. If not, *R* will install the package.

2.  Alternatively, you can do this manually first by executing *install.packages("pacman")* and then *library(pacman)*.

3.  The second line then loads the package [pacman](https://cran.r-project.org/web/packages/pacman/index.html).

4.  The third line uses the function *p_load()* from the pacman package to install (if necessary) and load all packages that we provide as arguments (e.g., [pwr](https://cran.r-project.org/web/packages/pwr/) [@pwr], which provides functions for statistical power calculations, or [sensR](https://cran.r-project.org/web/packages/sensR/ "Link to CRAN") [@sensR], which provides access to many functions useful in sensory product research).

```{r}
#| include: false


#clear workspace
rm(list = ls())


#load packages
if (!"pacman" %in% rownames(installed.packages())) install.packages("pacman")

library(pacman)

pacman::p_load(tidyverse, SensoMineR, sensR, pwr, downloadthis, openxlsx, labelled, lm.beta, ggstatsplot, interactions, psych)

```

```{r}
#| eval: false

if (!"pacman" %in% rownames(installed.packages())) install.packages("pacman")

library(pacman)

pacman::p_load(tidyverse, SensoMineR, sensR, pwr, openxlsx, labelled, lm.beta, ggstatsplot, interactions, psych)

```

------------------------------------------------------------------------

::: {.callout-caution collapse="true"}
## Expand to learn more about calling functions

In all code chunks throughout this script, you can receive additional help on each used function by clicking on its name (or via right-click and then opening in a new browser tab). Alternatively, when coding, we can see which arguments a function understands by pressing 'F1' while setting the cursor to the function's name.
:::

------------------------------------------------------------------------

Here is the *R* session info, which gives you information on my machine, all loaded packages, and their version:

```{r  }

sessionInfo()


```

------------------------------------------------------------------------

# Finding an answer to case #1 - Discrimination testing -- The case of Jägermeister's grated deer horn

## Task 2 - Analyze whether the test results support the notion that consumers can detect the product differences between both variants.

Jägermeister was conducting an unspecified Duo-trio test for product differences with 206 regular Jägermeister consumers. In such a test procedure, consumers are asked to compare two product variants (Jägermeister Original vs. Jägermeister Grated Deer Horn). A reference product is first served. Then, consumers must decide which of the two other product samples matches the reference product. The reference product is sometimes Jägermeister Original and sometimes Jägermeister Grated Deer Horn. Also, the positions of the two product samples are counterbalanced across consumers following an experimental design.

The company observed 121 (out of 206) correct matches within the test.

The package [sensR](https://cran.r-project.org/web/packages/sensR/) provides functions to handle nearly all types of discrimination tests, including Duo-trio tests. We will use the function **discrim()**. This function allows us to specify many arguments (see help by pressing 'F1'). We will do so for

-   correct = the number of correct answers
-   total = total number of responses
-   conf.level = significance level (Type I error probability $\alpha$), usually 0.95, corresponding to 95%.
-   method = the discrimination protocol applied (see lecture slides for the various options)
-   statistic = The analysis strategy for the data (whether one wants to use normal distribution or Chi², etc.)
-   test = Whether a test for similarity or difference should be obtained.

Below, we assign the results of our Discrimination test to a new object named 'duo_trio_test.' Then, we call for its content.

```{r}

duo_trio_test <- discrim(
  correct= 121, 
  total= 206,
  conf.level = 0.95,
  method = "duotrio", 
  statistic = "score",
  test = "difference")


duo_trio_test

```

::: callout-tip
## Interpretation

As the results of the $\chi^{2}$-test are significant (p=`r round(duo_trio_test$p.value, digits = 3)`), we must reject H~0~. Thus, consumers can reliably distinguish between the new and the old Jägermeister recipe. Of course, this does not answer whether the grated horn variant tastes better than Jägermeister Original.
:::

-   In the output above, *pc* means the percentage of correct discriminators (121/206).
-   *pd* stands for the estimated proportion of individuals in the (relevant) population that would detect the product difference (`r round(duo_trio_test$coefficients[2,1]*100, digits = 3)`%). In the case of a Duo-trio test, this is $pd=\frac{pc-1/2}{1/2}$. Note that the confidence interval for pd has an upper limit of `r round(duo_trio_test$coefficients[2, 4]*100, digits = 2)`%. Thus, in the worst case, the true proportion of discriminators is almost as high as 31%.
-   The Thurstonian approach of transforming the number of correct answers into an estimate, called d-prime of the underlying (relative) sensory difference, is an attempt to overcome the concepts of *pc* and *pd* since these are dependent on the concrete test protocol one has applied (e.g., Triangle vs. 3-AFC tests). The higher the value, the higher the difference between the tested products.

## Task 3 - Analyze whether a Triangle or a Duo-trio test has higher statistical power to detect the product differences between both variants.

Again, we use functions from the [sensR](https://cran.r-project.org/web/packages/sensR/) package. Further, we assume that the observed d-prime from Task 2 is the true effect size in the underlying population. Consequently, we will use this d-prime estimate (`r round(duo_trio_test$coefficients[3, 1], digits = 2)`) as input to compare the statistical power of the Triangle test vs. the Duo-trio test (each with n=201).

We start with the Duo-trio test. In the code chunk below, we use the obtained d-prime as input for the function *d.primePwr()*. Furthermore, we specify all other aspects of our test.

```{r}

power_duo_trio <- d.primePwr(
  d.primeA = duo_trio_test$coefficients[3, 1],
  sample.size = 206,
  alpha = 0.05,
  method = "duotrio",
  test = "difference", statistic = "exact"
)

power_duo_trio


```

::: callout-tip
## Interpretation

With the observed effect size for the difference, our Duo-trio test protocol only has a power of `r round(power_duo_trio*100, digits = 2)`%. Thus, if the observed effect is the true effect in the underlying population, then we would have this chance to find a significant difference in a Duo-trio test with n=206 and $\alpha$=5%, which falls below the standard advice of having a statistical power of at least 80% [@Cohen.1988]. Thus, Jägermeister should allocate more money to such tests to recruit more consumers.
:::

Next, we proceed with the Triangle test.

```{r}

power_triangle <- d.primePwr(
  d.primeA = duo_trio_test$coefficients[3, 1],
  sample.size = 206,
  alpha = 0.05,
  method = "triangle",
  test = "difference", statistic = "exact"
)

power_triangle


```

::: callout-tip
## Interpretation

A Triangle test protocol would have a higher power of `r round(power_triangle*100, digits = 2)`%. Therefore, if the observed effect is true in the underlying population and Jägermeister can not afford a larger sample size than n=206, the company should switch from a Duo-trio to a Triangle test protocol.
:::

For the sake of completeness, I have visualized the development of the statistical power given a d-prime of `r round(duo_trio_test$coefficients[3, 1], digits = 2)` and an allowed $\alpha$ = 5% for both test variants.

```{r}

sample_sizes <- list(n50 = 50,
                     n100 = 100,
                     n150 = 150,
                     n200 = 200,
                     n250 = 250,
                     n300 = 300,
                     n350 = 350,
                     n400 = 400,
                     n450 = 450,
                     n500 = 500,
                     n550 = 550)

power_duo_trio_list <- sample_sizes %>%
  map(~ d.primePwr(
    d.primeA = duo_trio_test$coefficients[3, 1],
    sample.size = .,
    alpha = 0.05,
    method = "duotrio",
    test = "difference", statistic = "exact"
  ))

power_triangle_list <- sample_sizes %>%
  map(~ d.primePwr(
    d.primeA = duo_trio_test$coefficients[3, 1],
    sample.size = .,
    alpha = 0.05,
    method = "triangle",
    test = "difference", statistic = "exact"
  ))

power <- tibble(sample_size = c(50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550), duo_trio = power_duo_trio_list, triangle = power_triangle_list)

power_long <- power %>% pivot_longer(cols = c(duo_trio, triangle), names_to = "method", values_to = "power")

power_long$power <- unlist(power_long$power)

power_long %>% ggplot(
  aes(
    x = sample_size,
    y = power,
    shape = method,
    color = method
  )
) +
  geom_line(color = "black") +
  geom_point(size = 3)

```

------------------------------------------------------------------------

# Finding an answer to case #2 - Hearing test

## Task 1 - Use a linear regression to evaluate if hearing capabilities are decreasing with increasing age in years.

### Downloading the data

First, we will download the data from my homepage at the [Otto-von-Guericke-University](https://www.ovgu.de/en/).

The dataset is stored as a .xlsx file (Microsoft Excel) within the following directory: *https://www.ovgu.de/lichters/smpi/data/* The dataset's name is **hearing_test_2023.xlsx**.

We first set the url (Uniform Resource Locator) for the download.

```{r}

url_of_file <- "https://www.ovgu.de/lichters/smpi/data/hearing_test_2023.xlsx"



```

We then download the file to our current *R project*. Base *R* isn't able to handle Excel files that well. Thus, we are using the function *read.xlsx()* provided by the [openxlsx](https://cran.r-project.org/web/packages/openxlsx/index.html) package [@openxlsx].

```{r}

hearing_test <- read.xlsx(url_of_file) %>% as_tibble()

```

If anything does not work out as expected on your machine, you can download the data by clicking on the following button.

```{r}
#| include: false

download_link(link = "https://www.ovgu.de/lichters/smpi/data/hearing_test_2023.xlsx", 
              button_label = "Download Excel file manually", 
              button_type = "default", 
              has_icon = TRUE, 
              icon = "fa fa-save", 
              self_contained = FALSE)

```

Let's have a look at the dataset:

```{r}

hearing_test

```

In the dataset, we find 4 variables in the columns.

1.  *Gender* provides a character for females (f) or males (m)
2.  *Age* is the participant's age in years
3.  *Frequency* provides the highest frequency (in Hertz) that participants still can hear
4.  *Year* indicates the calendar year where the data was recorded

Next, we explicitly tell *R* to treat the variable *Gender* as a categorial factor:

```{r}

hearing_test$Gender <- hearing_test$Gender %>% to_factor()

```

In the next step, we fit an OLS linear regression model with *Age* as a predictor and *Frequency* as the dependent variable.

```{r}

regression_1 <- hearing_test %>% lm(Frequency~Age, data = .)

```

Subsequently, we summarize the results.

```{r}

summary(regression_1)

```

::: callout-tip
## Interpretation

From this summary, we see that the overall F-test for the regression is significant; thus, either the Age or the intercept term (or both) in the model significantly explains the dependent variable *Frequency*. Specifically, the *Age* variable has a negative regression coefficient of `r round(regression_1$coefficients[2], digits = 2)`. and the corresponding p-value is significant at 5% with a value of `r round(summary(regression_1)$coefficients[,"Pr(>|t|)"][[2]], digits = 3)`. Therefore, we can conclude that with every year increase in age, people roughly lose an additional `r abs(round(regression_1$coefficients[2], digits = 0))` Hertz of hearing capabilities for higher frequencies.
:::

## Task 2 - Is this process contingent on gender?

Put differently, your task is to evaluate whether the decline in hearing capabilities that people experience with age is contingent on a person's gender. For example, it could be that the decrease in capabilities is less pronounced for women than for men.

Below, we first build a new regression model that includes *Age*, *Gender*, and their interaction as predictors.

```{r}
regression_2 <- hearing_test %>% lm(Frequency~Age*Gender, data = .)

summary(regression_2)

```

The simple results summary tells us that the interaction term is not significant. However, in many fields, it's more common to use bootstrapped results instead to evaluate whether an interaction (aka moderation) effect is significant.

Use the PROCESS Macro's model 1 [see, @Hayes.2022] to evaluate whether age in years interacts with gender in the above regression.

Social scientists usually rely on the PROCESS macros provided by Andrew F. Hayes, a recognized expert in the field, to evaluate such moderation effects. Of course, there is also an *R* version of the tool. It can be downloaded [here](https://haskayne.ucalgary.ca/CCRAM/resource-hub), but I also have a copy on my homepage under *https://www.ovgu.de/lichters/smpi/data/*. Let's load the functions provided by the Process Macro:

```{r}

source("https://www.ovgu.de/lichters/smpi/data/process.R")


```

Now, we set up Model 1 in PROCESS. While doing this, one caveat is that the process macro is not working with nominal-scaled variables stored as characters, such as the *Gender* variable. We first transform this variable as a workaround to a labeled numerical one.

```{r}

hearing_test_PROCESS <- hearing_test

hearing_test_PROCESS$Gender <- hearing_test_PROCESS$Gender %>% to_labelled()

hearing_test_PROCESS$Gender

```

As a result, the variable *Gender* now is coded numerically with 1 (females) and 2 (males).

Next, we use the *process()* functions. Here,

-   y = *"Frequency"* is the dependent variable,
-   x = *"Age"* is the main predictor,
-   w = *"Gender"* is the moderator with only 2 possible values,
-   model = 1 indicates that we are using PROCESS model #1 (see, [@Hayes.2022, p. 621 for an overview])
-   An explanation of all arguments would go beyond this exercise. Noteworthy, however, is that we set *conf* to 0.95 to ask for 95% confidence intervals and *boot* to 5,000 to ask for an evaluation of 5,000 bootstrap samples (reduce this number if your machine is too slow).

```{r}

process(
  data = hearing_test_PROCESS,
  y = "Frequency",
  x = "Age",
  w = "Gender",
  model = 1,
  center = 2, jn = 1,
  moments = 1, modelbt = 1,
  boot = 5000, seed = 54545, progress = F,
  conf = 0.95
)

```

::: callout-tip
## Interpretation

The results above show that the decline in hearing capabilities does not hinge on a person's gender. This is displayed by the statistically insignificant interaction term of *Gender* $\times$ *Age* (see the p-value for the row **Int_1**). The bootstrapping analysis further supports this. Here, the 95% confidence intervals for the model term **Int_1** are crossing **0**.
:::

However, the non-significant moderation effect could also have resulted from a sample size that was too tiny (think of the statistical power).

To illustrate the descriptive difference in declines in hearing capabilities by gender, we plot regression lines for both values of the moderator *Gender* below. This is most easily done by the function *interact_plot(),* which the *interactions* package [@interactions] provides.

In the code chunk below, we hand in *regression_2* (the regression model containing the main effects plus the interaction) to the argument *model* of the function *interact_plot()*.

Here,

-   data = is the underlying dataset,
-   pred = *"Age"* is the main predictor,
-   modx = *"Gender"* is the moderator with only 2 possible values,
-   plot.points = TRUE indicates that each data point should be superimposed
-   interval = TRUE asks for 95% confidence intervals around the regression lines

```{r}

regression_2 %>% interact_plot(model = ., 
                               data =  hearing_test, 
                               pred = Age, 
                               modx = Gender,
                               plot.points = TRUE,
                               interval = TRUE,
                               main.title = "Highest detectable frequency by age (years) and gender \n together with 95% confidence intervals"
                               ) 
  

```

Overall, it seems males are losing their hearing capabilities faster than females, although the interaction is not statistically significant.

## Task 3 - Which variable, age or gender, impacts hearing capabilities more in the model without the interaction term?

The easiest way to evaluate the explanatory power of different predictors in the regression model is to compare their standardized regression coefficient's magnitude qualitatively. This assumes that Age's and Gender's main effects significantly differ from 0 (p\<0.05). To get a summary of the standardized regression coefficients, we apply the function *lm.beta()* from the *lm.beta* package [@lm.beta]. First, we build a model with the main effects of *Age* and *Gender* only.

```{r}

regression_3 <- hearing_test %>% lm(Frequency~Age + Gender, data = .)



```

Then, we ask for a model summary, including the standardized regression coefficients.

```{r}

regression_3 %>% lm.beta() %>% summary()

```

::: callout-tip
## Interpretation

For the interpretation, we should first focus on the p-value of the t-test for the model terms (**Pr(\>\|t\|)**). If one of both variables is accompanied by a value of \< 0.05, we would conclude that this variable has a higher explanatory power in hearing capabilities. If both predictors are below 0.05, the predictor with the highest magnitude in the standardized regression coefficients (**Standardized**) explains better. However, suppose both predictors did not reach significance. In that case, none of them is a good (in a statistical sense) predictor of hearing capabilities, and we should not interpret differences in the magnitude of the standardized coefficients.
:::

## Task 4 - How much total information in hearing capabilities can be explained by gender, age, and its interaction?

This question is directed to the adjusted R² value for the corresponding regression model. We build one with both main effects and the interaction term between *Age* and *Gender*.

```{r}



summary(regression_2)

```

::: callout-tip
## Interpretation

Overall, both variables plus their interaction explain hearing capabilities quite well, as the adjusted R² value is relatively high (`r round(summary(regression_3)$adj.r.squared, digits = 2)`)
:::

## Task 5 - Is a linear regression truly fitting to the relationship between hearing capabilities and age?

> Provide a plot that shows observed values for hearing capabilities (y), age in years (x), and a fitted linear regression line to guide your decision.

As always, multiple routes in R lead to this result. In the following, I use the function *ggscatterstats()* provided by the package *ggstatsplot* [@patil2021].

```{r}

ggscatterstats(
  data = hearing_test, ## data frame from which variables are taken
  x = Age, ## predictor/independent variable
  y = Frequency, ## dependent variable (Hearing capabilities)
  xlab = "Age (in years)", ## label for the x-axis
  ylab = "Frequency (highest hearable frequency in Hertz)", ## label for the y-axis
  xfill = "#CC79A7", ## fill for marginals on the x-axis
  yfill = "#009E73", ## fill for marginals on the y-axis
  title = "Relationship between Age and Hearing capabilities",
  bf.message = FALSE
) 

```

## Task 6 - Imagine that your task is to develop an unobtrusive auditory signal for an electric vehicle's reverse gear driving modus.

> Which frequency in Hertz should such a signal not exceed to keep it above the collective threshold of conscious perception?

Think back to Chapter 2 of the Sensory Marketing and Product Innovation lecture. Such a question deals with the **threshold of collective conscious perception**, usually defined as the stimulus intensity, etc., that 50% of individuals can perceive consciously.

Thus, we have to ask for the median in hearing capabilities. One way to display the basic descriptive statistics for an interval-scaled variable is to use the *describe()* function provided by the *psych* package [@psych].

```{r}

hearing_test$Frequency %>% psych::describe()

```

::: callout-tip
## Interpretation

Since the median in hearing capabilities is (`r format(round(psych::describe(hearing_test$Frequency)$median, digits = 2), scientific = FALSE)`) Hertz, this is the highest frequency in Hertz that the car manufacturer should consider if the goal is to stay above the threshold of collective conscious perception. Of course, this isn't a good idea since the other 50% of consumers would be unable to hear such an auditory signal.
:::

------------------------------------------------------------------------
